worker_processes auto;
worker_cpu_affinity auto;
worker_rlimit_nofile 32768;

upstream node-backend {
  server firstapp:3000;
  server secondapp:3001;
}

events {
  worker_connections 32768;
  multi_accept on;
  accept_mutex on;
}

http {
  server {
    listen 80;
    listen [::]:80;
    server_name api-node.com www.api-node.com;
    return 301 https://$host$request_uri;

    location / {
      proxy_pass http://node-backend;
      proxy_http_version 1.1;
      proxy_set_header Host $host;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header Connection "upgrade";
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_cache_bypass $http_upgrade;
      proxy_connect_timeout 1d;
      proxy_send_timeout 1d;
      proxy_read_timeout 1d;
      proxy_headers_hash_max_size 1024;
      proxy_redirect off;
      proxy_buffering off;
    }
  }

  server {
    listen 443 ssl http2 default_server;
    listen [::]:443 ssl http2 default_server;
    server_name api-node.com www.api-node.com;

    ssl_certificate /etc/nginx/ssl/intermediate.pem;
    ssl_certificate_key /etc/nginx/ssl/cert.key;
    ssl_protocols TLSv1.3;
    ssl_ciphers 'ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA256';
    ssl_session_cache shared:SSL:60m;
    ssl_buffer_size 50k;
    ssl_session_timeout 60m;
    ssl_session_tickets off;
    ssl_prefer_server_ciphers on;
    ssl_stapling on;
    ssl_stapling_verify on;

    location / {
      proxy_pass http://node-backend;
      proxy_http_version 1.1;
      proxy_set_header Host $host;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header Connection "upgrade";
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_cache_bypass $http_upgrade;
      proxy_connect_timeout 1d;
      proxy_send_timeout 1d;
      proxy_read_timeout 1d;
      proxy_headers_hash_max_size 1024;
      proxy_redirect off;
      proxy_buffering off;
    }
  }

  tcp_nodelay on;
  client_max_body_size 50m;
  client_body_buffer_size 50k;
  resolver 8.8.8.8 8.8.4.4;
  resolver_timeout 1d;
}
