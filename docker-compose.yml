version: '3'
services:
  ########################################
  # APPLICATION FIRST SERVICE ENVIRONMENT
  ########################################
  firstapp:
    build: .
    restart: always
    healthcheck:
      start_period: 60s
      timeout: 120s
      interval: 30s
      test: ifconfig | grep broadcast
    ports:
      - 3000:3000
    env_file: .env
    environment:
      PORT: 3000
    depends_on:
      - database
    volumes:
      - ./:/usr/share/firstapp
      - /usr/share/app/node_modules
    networks:
      - node_networks
  #########################################
  # APPLICATION SECOND SERVICE ENVIRONMENT
  #########################################
  secondapp:
    build: .
    restart: always
    healthcheck:
      start_period: 60s
      timeout: 120s
      interval: 30s
      test: ifconfig | grep broadcast
    ports:
      - 3001:3001
    env_file: .env
    environment:
      PORT: 3001
    depends_on:
      - database
    volumes:
      - ./:/usr/share/secondapp
      - /usr/share/app/node_modules
    networks:
      - node_networks
  ##############################
  # DATABASE SERVICE ENVIRONMENT
  ##############################
  database:
    image: postgres:14-alpine
    restart: always
    healthcheck:
      start_period: 60s
      timeout: 120s
      interval: 30s
      test: ifconfig | grep broadcast
    env_file: .env
    environment:
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_DB=${DB_NAME}
    ports:
      - 5432:5432
    volumes:
      - database:/var/lib/postgresql/data
    networks:
      - node_networks
  #############################
  # PROXY SERVICES ENVIRONMENT
  #############################
  proxy:
    build:
      context: .
      dockerfile: Dockerfile.nginx
    restart: always
    healthcheck:
      start_period: 60s
      timeout: 120s
      interval: 30s
      test: ifconfig | grep broadcast
    ports:
      - 80:80
      - 443:443
    depends_on:
      - firstapp
      - secondapp
    volumes:
      - ${PWD}/default.conf:/etc/nginx/conf.d/default.conf
    networks:
      - node_networks
# #############################
# # VOLUME PERSISTENT DATA
# #############################
volumes:
  database:
#############################
# NETWORKS SHARING GROUP
#############################
networks:
  node_networks:
